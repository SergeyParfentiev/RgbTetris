<!-- Copyright 2016 Denis T (https://github.com/dragon-dreamer / dragondreamer [ @ ] live.com) -->
<!-- SPDX-License-Identifier: GPL-3.0 -->
<Window x:Class="LedMatrixDebugConsole.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:LedMatrixDebugConsole"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="Led Matrix Debug Console"
        Closing="MainWindowClosing"
        MinWidth="500" MinHeight="700"
        Width="500" Height="700">
    <Window.Resources>
        <local:LogLevelToBitmapImageConverter x:Key="LogLevelToBitmapImageConverter" />
        <local:ButtonStatusToColorValueConverter x:Key="ButtonStatusToColorValueConverter" />
        <Style TargetType="FrameworkElement" x:Key="BaseControlStyle">
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="Margin" Value="2" />
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="Buttons" BasedOn="{StaticResource BaseControlStyle}" />
        <Style TargetType="{x:Type ComboBox}" x:Key="ComboBoxes" BasedOn="{StaticResource BaseControlStyle}" />
        <Style TargetType="{x:Type xctk:IntegerUpDown}" x:Key="IntegerUpDowns" BasedOn="{StaticResource BaseControlStyle}" />
        <Style TargetType="local:Led" x:Key="ButtonDisplayStyle">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Margin" Value="2" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, 
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Margin="2">
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding ActualHeight, ElementName=ololo}"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="ololo">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            
            <local:LedMatrix HorizontalCount="10" VerticalCount="16" x:Name="LedMatrixContents" />

            <Grid Grid.Row="1" Margin="20,50,20,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <local:Led Grid.Column="1" IsEditable="False" Style="{StaticResource ButtonDisplayStyle}"
                           LightColor="{Binding AppLogic.FwdButtonPressed, Converter={StaticResource ButtonStatusToColorValueConverter}}" />
                <local:Led Grid.Column="1" Grid.Row="2" IsEditable="False" Style="{StaticResource ButtonDisplayStyle}"
                           LightColor="{Binding AppLogic.BackButtonPressed, Converter={StaticResource ButtonStatusToColorValueConverter}}" />
                <local:Led Grid.Row="1" IsEditable="False" Style="{StaticResource ButtonDisplayStyle}"
                           LightColor="{Binding AppLogic.LeftButtonPressed, Converter={StaticResource ButtonStatusToColorValueConverter}}" />
                <local:Led Grid.Row="1" Grid.Column="2" IsEditable="False" Style="{StaticResource ButtonDisplayStyle}"
                           LightColor="{Binding AppLogic.RightButtonPressed, Converter={StaticResource ButtonStatusToColorValueConverter}}" />

                <local:Led Grid.Column="4" IsEditable="False" Style="{StaticResource ButtonDisplayStyle}"
                           LightColor="{Binding AppLogic.UpButtonPressed, Converter={StaticResource ButtonStatusToColorValueConverter}}" />
                <local:Led Grid.Column="4" Grid.Row="2" IsEditable="False" Style="{StaticResource ButtonDisplayStyle}"
                           LightColor="{Binding AppLogic.DownButtonPressed, Converter={StaticResource ButtonStatusToColorValueConverter}}" />
            </Grid>
        </Grid>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <StackPanel>
                <GroupBox Header="Device">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <ComboBox ItemsSource="{Binding AppLogic.ComPortList}" SelectedItem="{Binding AppLogic.SelectedComPort}"
                                      IsEnabled="{Binding AppLogic.CanOpenConnection}" Style="{StaticResource ComboBoxes}" />
                            <Button Command="{Binding RefreshPortListCommand}" Style="{StaticResource Buttons}">Refresh</Button>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button Command="{Binding StartCommunicationCommand}" Style="{StaticResource Buttons}">Start</Button>
                            <Button Command="{Binding StopCommunicationCommand}" Style="{StaticResource Buttons}">Stop</Button>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="Display">
                    <Button Command="{Binding SyncDisplayCommand}" Style="{StaticResource Buttons}">Synchronize</Button>
                </GroupBox>

                <GroupBox Header="Brightness">
                    <StackPanel>
                        <Label>Value:</Label>
                        <xctk:IntegerUpDown Value="{Binding AppLogic.Brightness}" Minimum="20" Maximum="200"
                                                IsEnabled="{Binding AppLogic.CanSendCommand}" AllowTextInput="False"
                                                Style="{StaticResource IntegerUpDowns}" />
                        <Button Command="{Binding RequestBrightnessCommand}" Style="{StaticResource Buttons}">Request</Button>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="Accelerometer">
                    <StackPanel>
                        <CheckBox Margin="2" IsChecked="{Binding AppLogic.IsAccelerometerOn}"
                                  IsEnabled="{Binding AppLogic.CanSendCommand}">Enabled</CheckBox>
                        <Button Command="{Binding RequestAccelerometerValuesCommand}"
                                Style="{StaticResource Buttons}">Request values</Button>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="Numeric display">
                    <StackPanel>
                        <Label>Value:</Label>
                        <TextBox Text="{Binding NumericDisplayValue, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True}"
                                 IsEnabled="{Binding AppLogic.CanSendCommand}" Margin="2" />
                        <Button Command="{Binding SetNumericDisplayValueCommand}"
                                Style="{StaticResource Buttons}">Set</Button>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </Grid>
        
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <ListBox ItemsSource="{Binding Log}" local:ListBoxBehavior.ScrollOnNewItem="True">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Path=Level, Converter={StaticResource LogLevelToBitmapImageConverter}}" Margin="0,0,5,0" />
                            <Label Content="{Binding Path=Text}"></Label>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</Window>
